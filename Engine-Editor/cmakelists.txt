# Engine-Editor/CMakeLists.txt
include(../Dependencies.cmake)
cmake_minimum_required(VERSION 3.16)

project(Engine-Editor LANGUAGES CXX)


set(CMAKE_CXX_STANDARD 23)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Output directories for target and object files
set(TARGET_DIR "${CMAKE_CURRENT_BINARY_DIR}/Engine-Editor")
set(OBJECT_DIR "${CMAKE_CURRENT_BINARY_DIR}/Engine-Editor")

# Source files
file(GLOB_RECURSE SOURCES "src/*.h" "src/*.cpp")

add_executable(Engine-Editor ${SOURCES})
if (WIN32)
    # Check if using MSVC
    if (MSVC)
        # Set the subsystem to Windows to avoid console window
        target_link_options(Engine-Editor PRIVATE 
        $<$<CONFIG:DEBUG>: /SUBSYSTEM:CONSOLE>
        $<$<CONFIG:RelWithDebInfo>: /SUBSYSTEM:CONSOLE>
        $<$<CONFIG:Release>: /SUBSYSTEM:WINDOWS /ENTRY:mainCRTStartup>
        $<$<CONFIG:Dist>: /SUBSYSTEM:WINDOWS /ENTRY:mainCRTStartup>
        )
    elseif (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
        # For MinGW, use -mwindows to avoid console window
        target_link_options(Engine-Editor PRIVATE -mwindows)
    endif()
endif()
target_compile_definitions(Engine PRIVATE "$<$<CONFIG:Debug>:DEBUG_BUILD>")
target_compile_definitions(Engine PRIVATE "$<$<CONFIG:RelWithInfo>:RelWithDebInfo_BUILD>")
target_compile_definitions(Engine PRIVATE "$<$<CONFIG:Release>:RELEASE_BUILD>")
target_compile_definitions(Engine PRIVATE "$<$<CONFIG:Dist>:DIST_BUILD>")
target_compile_definitions(Engine PRIVATE 
"$<$<OR:$<CONFIG:RelWithDebInfo>,$<CONFIG:Debug>>:EG_ENABLE_ASSERTS>"
)

set_target_properties(Engine-Editor PROPERTIES
    RUNTIME_OUTPUT_DIRECTORY ${TARGET_DIR}
    ARCHIVE_OUTPUT_DIRECTORY ${TARGET_DIR}
    LIBRARY_OUTPUT_DIRECTORY ${TARGET_DIR}
    OBJECT_OUTPUT_DIRECTORY ${OBJECT_DIR}
)

# Include directories
target_include_directories(Engine-Editor PRIVATE
    "${CMAKE_CURRENT_SOURCE_DIR}/../Engine/src"
    "${CMAKE_CURRENT_SOURCE_DIR}/../Engine/vendor/spdlog/include"
    "${CMAKE_CURRENT_SOURCE_DIR}/../Engine/vendor"
    "${CMAKE_CURRENT_SOURCE_DIR}"
    "${CMAKE_CURRENT_SOURCE_DIR}/src/"
    "${IncludeDir_filewatch}"
    "${IncludeDir_glm}"
    "${IncludeDir_stb_image}"
    "${IncludeDir_ImGuizmo}"
    "${IncludeDir_ImGui}"
)
message("${CMAKE_CURRENT_SOURCE_DIR}")
# Link libraries
target_link_libraries(Engine-Editor PRIVATE Engine)
target_link_libraries(Engine-Editor PRIVATE ImGui)
target_link_directories(Engine-Editor PUBLIC ${LibraryDir_python})

# Muniffic logo icon directory
target_compile_definitions(Engine-Editor PRIVATE LOGO_DIRECTORY=\"${CMAKE_CURRENT_BINARY_DIR}/resources/icons/EditorIcon/logo.png\")
# Platform-specific settings for Windows
if(WIN32)
    target_compile_definitions(Engine-Editor PRIVATE "_SILENCE_STDEXT_ARR_ITERS_DEPRECATION_WARNING")
    set(CMAKE_SYSTEM_VERSION "latest")
endif()

target_compile_options(Engine PRIVATE 
"$<$<OR:$<CONFIG:Debug>,$<CONFIG:RelWithDebInfo>>:-g>"
"$<$<CONFIG:Release>:-O2>"
"$<$<CONFIG:Dist>:-O3>"
)

set(CMAKE_OBJECT_OUTPUT_DIRECTORY PARENT_SCOPE
"$<$<OR:$<CONFIG:Debug>,$<CONFIG:RelWithDebInfo>>:${OBJECT_DIR}>"
)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY 
"$<$<OR:$<CONFIG:Debug>,$<CONFIG:RelWithDebInfo>>:${TARGET_DIR}>"
)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY
"$<$<OR:$<CONFIG:Debug>,$<CONFIG:RelWithDebInfo>>:${TARGET_DIR}>"
)
